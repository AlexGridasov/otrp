
info:
  component: API Service

spring:
  application:
    name: api-service

server:
  port: 7771

endpoints:
  health:
    sensitive: false

management:
  security:
    enabled: false
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles:
        hystrix: 0.90, 0.99
      percentiles-histogram:
        hystrix: true
  endpoints:
    metrics:
      enabled: true
    web:
      exposure:
        include: '*'
    prometheus:
      enabled: true


hystrix:
  threadpool:
    default:
      # Maximum number of concurrent requests when using thread pools (Default: 10)
      coreSize: 2
      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
      maxQueueSize: -1
      # Queue size rejection threshold (Default: 5)
      queueSizeRejectionThreshold: 1
  command:
    default:
      circuitBreaker:
        sleepWindowInMilliseconds: 3000
        requestVolumeThreshold: 2
      execution:
        isolation:
          # strategy: SEMAPHORE, no thread pool but timeout handling stops to work
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 6000
      metrics:
        healthSnapshot:
          intervalInMilliseconds: 10

app:
  ConnectTimeout: 100
  ReadTimeout: 5000

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 3
    metadataMap:
      instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}}
  client:
    # Default values comes from org.springframework.cloud.netflix.eureka.EurekaClientConfigBean
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://user:password@localhost:8761}/eureka/

logging:
  level:
    root: WARN
    com.gri.alex: INFO
    # Set DEBUG level on Hystrix to get an error message when a fallback method is used.
    com.netflix.hystrix: DEBUG
