version: '3'
services:
  eureka:
    image: localhost:5000/alex/eureka-server:1.0-SNAPSHOT
    ports:
      - "8761:8761"

  config:
    image: localhost:5000/alex/config-server:1.0-SNAPSHOT
    ports:
      - "8888:8888"

  restaurant-service:
    image: localhost:5000/alex/restaurant-service:1.0-SNAPSHOT
    ports:
      - "8080:8080"
    links:
      - eureka
      - config

  booking-service:
    image: localhost:5000/alex/booking-service:1.0-SNAPSHOT
    ports:
      - "8081:8080"
    links:
      - eureka
      - config

  user-service:
    image: localhost:5000/alex/user-service:1.0-SNAPSHOT
    restart: on-failure
    ports:
      - "8082:8080"
    depends_on:
      - eureka
      - config

  zuul:
    image: localhost:5000/alex/zuul-server:1.0-SNAPSHOT
    ports:
      - "8765:8765"
    links:
      - eureka

  api:
    image: localhost:5000/alex/api-service:1.0-SNAPSHOT
    ports:
      - "7771:7771"
    links:
      - eureka

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    volumes:
#      - ./prometheus:/etc/prometheus
#      - prometheus_data:/prometheus
#    ports:
#      - 9090:9090
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--web.console.libraries=/etc/prometheus/console_libraries'
#      - '--web.console.templates=/etc/prometheus/consoles'
#      - '--storage.tsdb.retention.time=200h'
#      - '--web.enable-lifecycle'

#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    volumes:
#      - grafana_data:/var/lib/grafana
#      - ./grafana/provisioning:/etc/grafana/provisioning
#    environment:
#      #      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
#      #      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
#      - GF_USERS_ALLOW_SIGN_UP=false
#    ports:
#      - 3000:3000

#volumes:
#  prometheus_data: {}
#  grafana_data: {}
